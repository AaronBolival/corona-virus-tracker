{"version":3,"sources":["logo.svg","DataFetching.js","App.js","reportWebVitals.js","index.js"],"names":["DataFetching","useState","latest","setLatest","results","setResults","searchCountry","setSearchCountry","lastUpdated","Date","parseInt","updated","toString","useEffect","axios","all","get","then","responseArr","data","catch","err","console","log","countries","filter","item","country","map","i","Card","className","CardContent","src","countryInfo","flag","Typography","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","gutterBottom","variant","component","id","color","Box","container","FormControl","InputBase","placeholder","inputProps","type","onChange","e","target","value","autoCapitalize","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","classes","useTheme","React","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","noWrap","Drawer","anchor","paper","direction","Divider","List","ListItem","Link","href","paragraph","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55aebe62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport { shadows } from '@material-ui/system';\n\nimport {Grid,Card,CardContent,Typography, FormControl, Box} from '@material-ui/core/';\n\nfunction DataFetching(){\n    const [latest,setLatest]=useState([])\n    const [results,setResults]=useState([])\n    const [searchCountry, setSearchCountry]=useState(\"\")\n\n    const date = new Date(parseInt(latest.updated));\n    const lastUpdated = date.toString();\n\n    useEffect(()=>{\n        axios\n        .all([\n          axios.get('https://corona.lmao.ninja/v2/all'),\n          axios.get('https://corona.lmao.ninja/v2/countries')\n\n        ])\n        .then(responseArr => {\n            setResults(responseArr[1].data)\n            setLatest(responseArr[0].data)\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    },[])\n\n    const filterCountry = results.filter(item=>{\n      return item.country === searchCountry\n    })\n\n    const countries = filterCountry.map((data,i) =>{\n      return(\n        <Card key={i} className=\"card\">\n          <CardContent className=\"country-card\">\n            <img src={data.countryInfo.flag}/>\n            <Typography>{data.country}</Typography><hr/>\n            <Typography>Total Cases: {data.cases}</Typography>\n            <Typography>Today Cases: {data.todayCases}</Typography>\n            <Typography>Total Deaths: {data.deaths}</Typography>\n            <Typography>Today Deaths: {data.todayDeaths}</Typography>\n            <Typography>Total Recovered: {data.recovered}</Typography>\n            <Typography>Today Recovered: {data.todayRecovered}</Typography>\n            <Typography>Active Cases: {data.active}</Typography>\n            <Typography>Critical Cases: {data.critical}</Typography>\n            <hr/>\n            <Typography>Last Update: {lastUpdated}</Typography>\n          </CardContent>\n        </Card>\n      )\n    })\n\n    return(\n         <>\n      \n         {/* <Typography variant=\"h3\">World Wide</Typography>  */}\n         \n      \n          <Card className=\"card\">\n            \n              <CardContent className=\"card-content\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"card-typography1\" id=\"typo1\">Total Cases</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body1\" color=\"textSecondary\" className=\"card-typography2\" id=\"typo2\">{latest.cases}</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body2\" color=\"textSecondary\" className=\"card-typography3\" id=\"typo3\">Last Update: {lastUpdated}</Typography>\n              </CardContent>\n\n              {/*  */}\n\n              <CardContent className=\"card-content\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"card-typography1\" id=\"typo4\">Total Active Cases</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body1\" color=\"textSecondary\" className=\"card-typography2\" id=\"typo5\"> {latest.active}</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body2\" color=\"textSecondary\" className=\"card-typography3\" id=\"typo6\">Last Update: {lastUpdated}</Typography>\n\n              </CardContent>\n              \n              <CardContent className=\"card-content\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"card-typography1\" id=\"typo7\">Total Deaths</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body1\" color=\"textSecondary\" className=\"card-typography2\" id=\"typo8\"> {latest.deaths}</Typography>\n                {/* <hr/> */}\n                < Typography variant=\"body2\" color=\"textSecondary\" className=\"card-typography3\" id=\"typo9\">Last Update: {lastUpdated}</Typography>\n              </CardContent>\n              <CardContent className=\"card-content\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"card-typography1\" id=\"typo10\">Total Recovered</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body1\" color=\"textSecondary\" className=\"card-typography2\" id=\"typo11\"> {latest.recovered}</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body2\" color=\"textSecondary\" className=\"card-typography3\" id=\"typo12\">Last Update: {lastUpdated}</Typography>\n              </CardContent>\n\n  \n              <CardContent className=\"card-content\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"card-typography1\">Today Cases</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body1\" color=\"textSecondary\" className=\"card-typography2\">{latest.todayCases}</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body2\" color=\"textSecondary\" className=\"card-typography3\">Last Update: {lastUpdated}</Typography>\n              </CardContent>\n\n              <CardContent className=\"card-content\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"card-typography1\">Critical</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body1\" color=\"textSecondary\" className=\"card-typography2\"> {latest.critical}</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body2\" color=\"textSecondary\" className=\"card-typography3\">Last Update: {lastUpdated}</Typography>\n              </CardContent>\n\n              <CardContent className=\"card-content\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"card-typography1\">Today Recovered</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body1\" color=\"textSecondary\" className=\"card-typography2\"> {latest.todayRecovered}</Typography>\n                {/* <hr/> */}\n                <Typography variant=\"body2\" color=\"textSecondary\" className=\"card-typography3\">Last Update: {lastUpdated}</Typography>\n              </CardContent>\n              {/*  */}\n             \n          </Card>\n         \n         <Box container className=\"searchCon\">\n          <FormControl component=\"form\" className=\"form-control\" container>\n            <InputBase\n              placeholder=\"Search a Country\"\n              inputProps={{ 'aria-label': 'search' }}\n              type=\"search\"\n              onChange={e=>setSearchCountry(e.target.value)}\n              className=\"input-base\"\n              autoCapitalize=\"sentence\"\n            />\n            <span><b>Note: First Letter should be capital</b>(eg.Philippines)</span>\n            \n            \n          </FormControl>\n          </Box>\n          {countries}\n          </>\n    )\n}\n\nexport default DataFetching;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport DataFetching from './DataFetching';\n// import {BrowserRouter as Router,Link,Route , Switch} from \"react-router-dom\"\n\nimport Link from '@material-ui/core/Link';\n\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\n\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Container, Grid } from '@material-ui/core';\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    // backgroundColor:\"#455a64\"\n  },\n  appBar: {\n    backgroundColor:\"#455a64\",\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst App = () => {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Covid-19 Status\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n             <List>\n               <ListItem >\n                 <Link href=\"https://doh.gov.ph/\" target=\"_blank\">Department of Health<allCountries/></Link>\n               </ListItem>\n               <ListItem>\n                 <Link href=\"https://www.who.int/\" target=\"_blank\">World Health Organization</Link>\n               </ListItem>\n             </List>\n        <Divider/>\n              <List>\n                <ListItem>\n                 <Link href=\"https://disease.sh/docs/#/\" target=\"_blank\">Corona Virus API</Link>\n                </ListItem>\n              </List>\n\n      </Drawer>\n     \n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Box className=\"card_container\" container>\n          <DataFetching />        \n        </Box>\n        <Box className=\"detail-container\" container>\n          <Typography variant=\"h5\">What is Corona Virus</Typography>\n          <Typography paragraph>\n             Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV). A novel coronavirus (nCoV) is a new strain that has not been previously identified in humans.\n          </Typography>\n        </Box>\n        <Box className=\"detail-container\" container>\n          <Typography variant=\"h5\">What causes COVID-19?</Typography>\n          <Typography paragraph>\n             COVID-19 is caused by infection with the severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) virus strain.\n          </Typography>\n        </Box>\n        <Box className=\"detail-container\" container>\n          <Typography variant=\"h5\">Symptoms</Typography>\n          <Typography paragraph>\n            According to WHO, the most common symptoms of COVID-19 are fever, tiredness and dry cough. Few patients experience aches and pains, nasal congestion, runny nose, sore throat or diarrhea. Patients usually have mild symptoms that start gradually. Most patients recover without needing any special treatment. Only around 1 of 6 patients manifest with difficulty breathing and become seriously ill.\n          </Typography>\n        </Box>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}